
> tasket-backend@1.0.0 dev
> nodemon server.js

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js`[39m
Executing (default): SELECT 1+1 AS result
✅ Database connection established successfully.
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'departments'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'departments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'departments' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "departments" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "departments" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "departments"  ADD UNIQUE ("name");ALTER TABLE "departments" ALTER COLUMN "name" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "departments" DROP CONSTRAINT "departments_manager_id_fkey"
Executing (default): ALTER TABLE "departments"  ADD FOREIGN KEY ("manager_id") REFERENCES "employees" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "budget" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "budget" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "budget" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "departments" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'departments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_employees_role' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "employees" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "employees"  ADD UNIQUE ("email");ALTER TABLE "employees" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "position" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "position" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "position" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" DROP CONSTRAINT "employees_department_id_fkey"
Executing (default): ALTER TABLE "employees"  ADD FOREIGN KEY ("department_id") REFERENCES "departments" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "role" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "role" SET DEFAULT 'employee';DO 'BEGIN CREATE TYPE "public"."enum_employees_role" AS ENUM(''admin'', ''manager'', ''employee''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "employees" ALTER COLUMN "role" TYPE "public"."enum_employees_role" USING ("role"::"public"."enum_employees_role");
Executing (default): ALTER TABLE "employees" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "hire_date" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "hire_date" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "hire_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "salary" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "salary" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "salary" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "is_active" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "is_active" SET DEFAULT true;ALTER TABLE "employees" ALTER COLUMN "is_active" TYPE BOOLEAN;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "photo" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "photo" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "photo" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "job_description" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "job_description" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "job_description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_priority' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_assigned_to_fkey"
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_created_by_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("assigned_to") REFERENCES "employees" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "created_by" SET NOT NULL;ALTER TABLE "tasks"  ADD FOREIGN KEY ("created_by") REFERENCES "employees" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_department_id_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("department_id") REFERENCES "departments" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'planned';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''planned'', ''in-progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "priority" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "priority" SET DEFAULT 'medium';DO 'BEGIN CREATE TYPE "public"."enum_tasks_priority" AS ENUM(''low'', ''medium'', ''high'', ''urgent''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "priority" TYPE "public"."enum_tasks_priority" USING ("priority"::"public"."enum_tasks_priority");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "due_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "due_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "due_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "start_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "start_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "start_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "completed_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "completed_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "completed_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" TYPE INTEGER;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "actual_hours" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "actual_hours" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "actual_hours" TYPE INTEGER;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "tags" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "tags" SET DEFAULT '[]';ALTER TABLE "tasks" ALTER COLUMN "tags" TYPE JSON;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "attachments" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "attachments" SET DEFAULT '[]';ALTER TABLE "tasks" ALTER COLUMN "attachments" TYPE JSON;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'task_comments'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_task_comments_comment_type' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'task_comments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'task_comments' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "task_comments" DROP CONSTRAINT "task_comments_task_id_fkey"
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "task_id" SET NOT NULL;ALTER TABLE "task_comments"  ADD FOREIGN KEY ("task_id") REFERENCES "tasks" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "task_comments" DROP CONSTRAINT "task_comments_employee_id_fkey"
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "employee_id" SET NOT NULL;ALTER TABLE "task_comments"  ADD FOREIGN KEY ("employee_id") REFERENCES "employees" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "comment" SET NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "comment" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "comment" TYPE TEXT;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "comment_type" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "comment_type" SET DEFAULT 'comment';DO 'BEGIN CREATE TYPE "public"."enum_task_comments_comment_type" AS ENUM(''comment'', ''status_change'', ''assignment_change''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "task_comments" ALTER COLUMN "comment_type" TYPE "public"."enum_task_comments_comment_type" USING ("comment_type"::"public"."enum_task_comments_comment_type");
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'task_comments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'departments'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'departments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'departments' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "departments" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "departments" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "departments"  ADD UNIQUE ("name");ALTER TABLE "departments" ALTER COLUMN "name" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "departments" DROP CONSTRAINT "departments_manager_id_fkey"
Executing (default): ALTER TABLE "departments"  ADD FOREIGN KEY ("manager_id") REFERENCES "employees" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "budget" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "budget" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "budget" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "departments" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'departments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_employees_role' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "employees" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "employees"  ADD UNIQUE ("email");ALTER TABLE "employees" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "position" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "position" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "position" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" DROP CONSTRAINT "employees_department_id_fkey"
Executing (default): ALTER TABLE "employees"  ADD FOREIGN KEY ("department_id") REFERENCES "departments" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "role" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "role" SET DEFAULT 'employee';DO 'BEGIN CREATE TYPE "public"."enum_employees_role" AS ENUM(''admin'', ''manager'', ''employee''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "employees" ALTER COLUMN "role" TYPE "public"."enum_employees_role" USING ("role"::"public"."enum_employees_role");
Executing (default): ALTER TABLE "employees" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "hire_date" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "hire_date" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "hire_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "salary" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "salary" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "salary" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "is_active" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "is_active" SET DEFAULT true;ALTER TABLE "employees" ALTER COLUMN "is_active" TYPE BOOLEAN;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "photo" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "photo" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "photo" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "job_description" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "job_description" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "job_description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_priority' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_assigned_to_fkey"
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_created_by_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("assigned_to") REFERENCES "employees" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "created_by" SET NOT NULL;ALTER TABLE "tasks"  ADD FOREIGN KEY ("created_by") REFERENCES "employees" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_department_id_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("department_id") REFERENCES "departments" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'planned';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''planned'', ''in-progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "priority" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "priority" SET DEFAULT 'medium';DO 'BEGIN CREATE TYPE "public"."enum_tasks_priority" AS ENUM(''low'', ''medium'', ''high'', ''urgent''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "priority" TYPE "public"."enum_tasks_priority" USING ("priority"::"public"."enum_tasks_priority");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "due_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "due_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "due_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "start_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "start_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "start_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "completed_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "completed_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "completed_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" TYPE INTEGER;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "actual_hours" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "actual_hours" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "actual_hours" TYPE INTEGER;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "tags" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "tags" SET DEFAULT '[]';ALTER TABLE "tasks" ALTER COLUMN "tags" TYPE JSON;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "attachments" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "attachments" SET DEFAULT '[]';ALTER TABLE "tasks" ALTER COLUMN "attachments" TYPE JSON;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'task_comments'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_task_comments_comment_type' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'task_comments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'task_comments' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "task_comments" DROP CONSTRAINT "task_comments_task_id_fkey"
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "task_id" SET NOT NULL;ALTER TABLE "task_comments"  ADD FOREIGN KEY ("task_id") REFERENCES "tasks" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "task_comments" DROP CONSTRAINT "task_comments_employee_id_fkey"
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "employee_id" SET NOT NULL;ALTER TABLE "task_comments"  ADD FOREIGN KEY ("employee_id") REFERENCES "employees" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "comment" SET NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "comment" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "comment" TYPE TEXT;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "comment_type" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "comment_type" SET DEFAULT 'comment';DO 'BEGIN CREATE TYPE "public"."enum_task_comments_comment_type" AS ENUM(''comment'', ''status_change'', ''assignment_change''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "task_comments" ALTER COLUMN "comment_type" TYPE "public"."enum_task_comments_comment_type" USING ("comment_type"::"public"."enum_task_comments_comment_type");
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'task_comments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
✅ Database synchronized successfully.
🚀 Server running on port 5002
📊 Environment: development
🌐 Frontend URL: http://localhost:5173
💾 Database: SQLite (development mode)
🔌 WebSocket server enabled
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "Employee"."id", "Employee"."email", "Employee"."name", "Employee"."position", "Employee"."job_description", "Employee"."department_id", "Employee"."role", "Employee"."phone", "Employee"."hire_date", "Employee"."salary", "Employee"."is_active", "Employee"."photo", "Employee"."created_at", "Employee"."updated_at", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
::1 - - [10/Sep/2025:13:28:10 +0000] "GET /api/auth/profile HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Client connected: F7gKeExRkDXXNc4pAAAC
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "Employee"."id", "Employee"."name", "Employee"."email", "Employee"."role", "Employee"."department_id", "department"."id" AS "department.id", "department"."name" AS "department.name", "department"."description" AS "department.description", "department"."manager_id" AS "department.manager_id", "department"."budget" AS "department.budget", "department"."created_at" AS "department.created_at", "department"."updated_at" AS "department.updated_at" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "Employee"."id", "Employee"."email", "Employee"."name", "Employee"."position", "Employee"."job_description", "Employee"."department_id", "Employee"."role", "Employee"."phone", "Employee"."hire_date", "Employee"."salary", "Employee"."is_active", "Employee"."photo", "Employee"."created_at", "Employee"."updated_at", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "Department"."id", "Department"."name", "Department"."description", "Department"."manager_id", "Department"."budget", "Department"."created_at", "Department"."updated_at", "employees"."id" AS "employees.id", "employees"."name" AS "employees.name", "employees"."position" AS "employees.position", "employees"."email" AS "employees.email", "manager"."id" AS "manager.id", "manager"."name" AS "manager.name", "manager"."position" AS "manager.position", "manager"."email" AS "manager.email" FROM "departments" AS "Department" LEFT OUTER JOIN "employees" AS "employees" ON "Department"."id" = "employees"."department_id" LEFT OUTER JOIN "employees" AS "manager" ON "Department"."manager_id" = "manager"."id" ORDER BY "Department"."name" ASC;
Executing (default): SELECT "Task"."id", "Task"."title", "Task"."description", "Task"."assigned_to", "Task"."created_by", "Task"."department_id", "Task"."status", "Task"."priority", "Task"."due_date", "Task"."start_date", "Task"."completed_date", "Task"."estimated_hours", "Task"."actual_hours", "Task"."tags", "Task"."attachments", "Task"."created_at", "Task"."updated_at", "assignedToEmployee"."id" AS "assignedToEmployee.id", "assignedToEmployee"."name" AS "assignedToEmployee.name", "assignedToEmployee"."email" AS "assignedToEmployee.email", "assignedToEmployee"."position" AS "assignedToEmployee.position", "createdByEmployee"."id" AS "createdByEmployee.id", "createdByEmployee"."name" AS "createdByEmployee.name", "createdByEmployee"."email" AS "createdByEmployee.email", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "tasks" AS "Task" LEFT OUTER JOIN "employees" AS "assignedToEmployee" ON "Task"."assigned_to" = "assignedToEmployee"."id" LEFT OUTER JOIN "employees" AS "createdByEmployee" ON "Task"."created_by" = "createdByEmployee"."id" LEFT OUTER JOIN "departments" AS "department" ON "Task"."department_id" = "department"."id" ORDER BY "Task"."created_at" DESC;
Executing (default): SELECT "Employee"."id", "Employee"."email", "Employee"."name", "Employee"."position", "Employee"."job_description", "Employee"."department_id", "Employee"."role", "Employee"."phone", "Employee"."hire_date", "Employee"."salary", "Employee"."is_active", "Employee"."photo", "Employee"."created_at", "Employee"."updated_at", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" ORDER BY "Employee"."name" ASC;
::1 - - [10/Sep/2025:13:28:11 +0000] "GET /api/employees? HTTP/1.1" 200 2009 "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
User presence update: System Administrator is online
User authenticated: System Administrator (admin@tasket.com)
User presence update: System Administrator is online
::1 - - [10/Sep/2025:13:28:11 +0000] "GET /api/auth/profile HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
User disconnected: System Administrator (F7gKeExRkDXXNc4pAAAC)
User presence update: System Administrator is offline
Client connected: ggFHuAR6KrU2SCgLAAAE
Executing (default): SELECT "Employee"."id", "Employee"."name", "Employee"."email", "Employee"."role", "Employee"."department_id", "department"."id" AS "department.id", "department"."name" AS "department.name", "department"."description" AS "department.description", "department"."manager_id" AS "department.manager_id", "department"."budget" AS "department.budget", "department"."created_at" AS "department.created_at", "department"."updated_at" AS "department.updated_at" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
::1 - - [10/Sep/2025:13:28:11 +0000] "GET /api/tasks? HTTP/1.1" 200 4580 "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
::1 - - [10/Sep/2025:13:28:11 +0000] "GET /api/departments HTTP/1.1" 200 593 "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "Employee"."id", "Employee"."email", "Employee"."name", "Employee"."position", "Employee"."job_description", "Employee"."department_id", "Employee"."role", "Employee"."phone", "Employee"."hire_date", "Employee"."salary", "Employee"."is_active", "Employee"."photo", "Employee"."created_at", "Employee"."updated_at", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" ORDER BY "Employee"."name" ASC;
Executing (default): SELECT "Department"."id", "Department"."name", "Department"."description", "Department"."manager_id", "Department"."budget", "Department"."created_at", "Department"."updated_at", "employees"."id" AS "employees.id", "employees"."name" AS "employees.name", "employees"."position" AS "employees.position", "employees"."email" AS "employees.email", "manager"."id" AS "manager.id", "manager"."name" AS "manager.name", "manager"."position" AS "manager.position", "manager"."email" AS "manager.email" FROM "departments" AS "Department" LEFT OUTER JOIN "employees" AS "employees" ON "Department"."id" = "employees"."department_id" LEFT OUTER JOIN "employees" AS "manager" ON "Department"."manager_id" = "manager"."id" ORDER BY "Department"."name" ASC;
Executing (default): SELECT "Task"."id", "Task"."title", "Task"."description", "Task"."assigned_to", "Task"."created_by", "Task"."department_id", "Task"."status", "Task"."priority", "Task"."due_date", "Task"."start_date", "Task"."completed_date", "Task"."estimated_hours", "Task"."actual_hours", "Task"."tags", "Task"."attachments", "Task"."created_at", "Task"."updated_at", "assignedToEmployee"."id" AS "assignedToEmployee.id", "assignedToEmployee"."name" AS "assignedToEmployee.name", "assignedToEmployee"."email" AS "assignedToEmployee.email", "assignedToEmployee"."position" AS "assignedToEmployee.position", "createdByEmployee"."id" AS "createdByEmployee.id", "createdByEmployee"."name" AS "createdByEmployee.name", "createdByEmployee"."email" AS "createdByEmployee.email", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "tasks" AS "Task" LEFT OUTER JOIN "employees" AS "assignedToEmployee" ON "Task"."assigned_to" = "assignedToEmployee"."id" LEFT OUTER JOIN "employees" AS "createdByEmployee" ON "Task"."created_by" = "createdByEmployee"."id" LEFT OUTER JOIN "departments" AS "department" ON "Task"."department_id" = "department"."id" ORDER BY "Task"."created_at" DESC;
::1 - - [10/Sep/2025:13:28:12 +0000] "GET /api/employees? HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
User presence update: System Administrator is online
User authenticated: System Administrator (admin@tasket.com)
User presence update: System Administrator is online
Executing (default): SELECT "Employee"."id", "Employee"."email", "Employee"."name", "Employee"."position", "Employee"."job_description", "Employee"."department_id", "Employee"."role", "Employee"."phone", "Employee"."hire_date", "Employee"."salary", "Employee"."is_active", "Employee"."photo", "Employee"."created_at", "Employee"."updated_at", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" ORDER BY "Employee"."name" ASC;
::1 - - [10/Sep/2025:13:28:12 +0000] "GET /api/tasks? HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
::1 - - [10/Sep/2025:13:28:12 +0000] "GET /api/departments HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = 'e3137a60-83b8-4a04-8e7b-2f5a05d53b39';
Executing (default): SELECT "Task"."id", "Task"."title", "Task"."description", "Task"."assigned_to", "Task"."created_by", "Task"."department_id", "Task"."status", "Task"."priority", "Task"."due_date", "Task"."start_date", "Task"."completed_date", "Task"."estimated_hours", "Task"."actual_hours", "Task"."tags", "Task"."attachments", "Task"."created_at", "Task"."updated_at", "assignedToEmployee"."id" AS "assignedToEmployee.id", "assignedToEmployee"."name" AS "assignedToEmployee.name", "assignedToEmployee"."email" AS "assignedToEmployee.email", "assignedToEmployee"."position" AS "assignedToEmployee.position", "createdByEmployee"."id" AS "createdByEmployee.id", "createdByEmployee"."name" AS "createdByEmployee.name", "createdByEmployee"."email" AS "createdByEmployee.email", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "tasks" AS "Task" LEFT OUTER JOIN "employees" AS "assignedToEmployee" ON "Task"."assigned_to" = "assignedToEmployee"."id" LEFT OUTER JOIN "employees" AS "createdByEmployee" ON "Task"."created_by" = "createdByEmployee"."id" LEFT OUTER JOIN "departments" AS "department" ON "Task"."department_id" = "department"."id" ORDER BY "Task"."created_at" DESC;
::1 - - [10/Sep/2025:13:28:12 +0000] "GET /api/employees? HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
::1 - - [10/Sep/2025:13:28:12 +0000] "GET /api/tasks? HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
User disconnected: System Administrator (ggFHuAR6KrU2SCgLAAAE)
User presence update: System Administrator is offline
Executing (default): SELECT "Department"."id", "Department"."name", "Department"."description", "Department"."manager_id", "Department"."budget", "Department"."created_at", "Department"."updated_at", "employees"."id" AS "employees.id", "employees"."name" AS "employees.name", "employees"."position" AS "employees.position", "employees"."email" AS "employees.email", "manager"."id" AS "manager.id", "manager"."name" AS "manager.name", "manager"."position" AS "manager.position", "manager"."email" AS "manager.email" FROM "departments" AS "Department" LEFT OUTER JOIN "employees" AS "employees" ON "Department"."id" = "employees"."department_id" LEFT OUTER JOIN "employees" AS "manager" ON "Department"."manager_id" = "manager"."id" ORDER BY "Department"."name" ASC;
::1 - - [10/Sep/2025:13:28:14 +0000] "GET /api/departments HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "Employee"."id", "Employee"."email", "Employee"."password", "Employee"."name", "Employee"."position", "Employee"."job_description", "Employee"."department_id", "Employee"."role", "Employee"."phone", "Employee"."hire_date", "Employee"."salary", "Employee"."is_active", "Employee"."photo", "Employee"."created_at", "Employee"."updated_at", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" WHERE "Employee"."email" = 'chadiech18@gmail.com' AND "Employee"."is_active" = true;
::1 - - [10/Sep/2025:13:28:20 +0000] "POST /api/auth/login HTTP/1.1" 200 794 "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8';
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8';
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8';
Client connected: UYRTB87fq2tjETWQAAAH
Executing (default): SELECT "Employee"."id", "Employee"."name", "Employee"."email", "Employee"."role", "Employee"."department_id", "department"."id" AS "department.id", "department"."name" AS "department.name", "department"."description" AS "department.description", "department"."manager_id" AS "department.manager_id", "department"."budget" AS "department.budget", "department"."created_at" AS "department.created_at", "department"."updated_at" AS "department.updated_at" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" WHERE "Employee"."id" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8';
Executing (default): SELECT "Department"."id", "Department"."name", "Department"."description", "Department"."manager_id", "Department"."budget", "Department"."created_at", "Department"."updated_at", "employees"."id" AS "employees.id", "employees"."name" AS "employees.name", "employees"."position" AS "employees.position", "employees"."email" AS "employees.email", "manager"."id" AS "manager.id", "manager"."name" AS "manager.name", "manager"."position" AS "manager.position", "manager"."email" AS "manager.email" FROM "departments" AS "Department" LEFT OUTER JOIN "employees" AS "employees" ON "Department"."id" = "employees"."department_id" LEFT OUTER JOIN "employees" AS "manager" ON "Department"."manager_id" = "manager"."id" ORDER BY "Department"."name" ASC;
Executing (default): SELECT "Task"."id", "Task"."title", "Task"."description", "Task"."assigned_to", "Task"."created_by", "Task"."department_id", "Task"."status", "Task"."priority", "Task"."due_date", "Task"."start_date", "Task"."completed_date", "Task"."estimated_hours", "Task"."actual_hours", "Task"."tags", "Task"."attachments", "Task"."created_at", "Task"."updated_at", "assignedToEmployee"."id" AS "assignedToEmployee.id", "assignedToEmployee"."name" AS "assignedToEmployee.name", "assignedToEmployee"."email" AS "assignedToEmployee.email", "assignedToEmployee"."position" AS "assignedToEmployee.position", "createdByEmployee"."id" AS "createdByEmployee.id", "createdByEmployee"."name" AS "createdByEmployee.name", "createdByEmployee"."email" AS "createdByEmployee.email", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "tasks" AS "Task" LEFT OUTER JOIN "employees" AS "assignedToEmployee" ON "Task"."assigned_to" = "assignedToEmployee"."id" LEFT OUTER JOIN "employees" AS "createdByEmployee" ON "Task"."created_by" = "createdByEmployee"."id" LEFT OUTER JOIN "departments" AS "department" ON "Task"."department_id" = "department"."id" WHERE ("Task"."assigned_to" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8' OR "Task"."created_by" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8') ORDER BY "Task"."created_at" DESC;
Executing (default): SELECT "Employee"."id", "Employee"."email", "Employee"."name", "Employee"."position", "Employee"."job_description", "Employee"."department_id", "Employee"."role", "Employee"."phone", "Employee"."hire_date", "Employee"."salary", "Employee"."is_active", "Employee"."photo", "Employee"."created_at", "Employee"."updated_at", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" ORDER BY "Employee"."name" ASC;
User presence update: Chadi Ech is online
User authenticated: Chadi Ech (chadiech18@gmail.com)
User Chadi Ech joined room: department_ac1bb7d8-9a46-4fdf-8b8e-24926caeb4ec
User presence update: Chadi Ech is online
::1 - - [10/Sep/2025:13:28:21 +0000] "GET /api/tasks? HTTP/1.1" 200 1768 "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8';
::1 - - [10/Sep/2025:13:28:21 +0000] "GET /api/employees? HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8';
::1 - - [10/Sep/2025:13:28:21 +0000] "GET /api/departments HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
Executing (default): SELECT "id", "email", "name", "position", "job_description", "department_id", "role", "phone", "hire_date", "salary", "is_active", "photo", "created_at", "updated_at" FROM "employees" AS "Employee" WHERE "Employee"."id" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8';
Executing (default): SELECT "Department"."id", "Department"."name", "Department"."description", "Department"."manager_id", "Department"."budget", "Department"."created_at", "Department"."updated_at", "employees"."id" AS "employees.id", "employees"."name" AS "employees.name", "employees"."position" AS "employees.position", "employees"."email" AS "employees.email", "manager"."id" AS "manager.id", "manager"."name" AS "manager.name", "manager"."position" AS "manager.position", "manager"."email" AS "manager.email" FROM "departments" AS "Department" LEFT OUTER JOIN "employees" AS "employees" ON "Department"."id" = "employees"."department_id" LEFT OUTER JOIN "employees" AS "manager" ON "Department"."manager_id" = "manager"."id" ORDER BY "Department"."name" ASC;
Executing (default): SELECT "Task"."id", "Task"."title", "Task"."description", "Task"."assigned_to", "Task"."created_by", "Task"."department_id", "Task"."status", "Task"."priority", "Task"."due_date", "Task"."start_date", "Task"."completed_date", "Task"."estimated_hours", "Task"."actual_hours", "Task"."tags", "Task"."attachments", "Task"."created_at", "Task"."updated_at", "assignedToEmployee"."id" AS "assignedToEmployee.id", "assignedToEmployee"."name" AS "assignedToEmployee.name", "assignedToEmployee"."email" AS "assignedToEmployee.email", "assignedToEmployee"."position" AS "assignedToEmployee.position", "createdByEmployee"."id" AS "createdByEmployee.id", "createdByEmployee"."name" AS "createdByEmployee.name", "createdByEmployee"."email" AS "createdByEmployee.email", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "tasks" AS "Task" LEFT OUTER JOIN "employees" AS "assignedToEmployee" ON "Task"."assigned_to" = "assignedToEmployee"."id" LEFT OUTER JOIN "employees" AS "createdByEmployee" ON "Task"."created_by" = "createdByEmployee"."id" LEFT OUTER JOIN "departments" AS "department" ON "Task"."department_id" = "department"."id" WHERE ("Task"."assigned_to" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8' OR "Task"."created_by" = '124d8bac-693b-4ce3-a39e-d3ca35487cb8') ORDER BY "Task"."created_at" DESC;
Executing (default): SELECT "Employee"."id", "Employee"."email", "Employee"."name", "Employee"."position", "Employee"."job_description", "Employee"."department_id", "Employee"."role", "Employee"."phone", "Employee"."hire_date", "Employee"."salary", "Employee"."is_active", "Employee"."photo", "Employee"."created_at", "Employee"."updated_at", "department"."id" AS "department.id", "department"."name" AS "department.name" FROM "employees" AS "Employee" LEFT OUTER JOIN "departments" AS "department" ON "Employee"."department_id" = "department"."id" ORDER BY "Employee"."name" ASC;
::1 - - [10/Sep/2025:13:28:22 +0000] "GET /api/tasks? HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
::1 - - [10/Sep/2025:13:28:22 +0000] "GET /api/employees? HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
::1 - - [10/Sep/2025:13:28:22 +0000] "GET /api/departments HTTP/1.1" 304 - "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
::1 - - [10/Sep/2025:13:28:27 +0000] "GET /api/uploads/photo-1757491829445-453141283.jpeg HTTP/1.1" 404 33 "http://localhost:5173/" "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36"
User disconnected: Chadi Ech (UYRTB87fq2tjETWQAAAH)
User presence update: Chadi Ech is offline
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting child process[39m
[32m[nodemon] starting `node server.js`[39m
Executing (default): SELECT 1+1 AS result
✅ Database connection established successfully.
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'departments'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'departments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'departments' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "departments" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "departments" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "departments"  ADD UNIQUE ("name");ALTER TABLE "departments" ALTER COLUMN "name" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "departments" DROP CONSTRAINT "departments_manager_id_fkey"
Executing (default): ALTER TABLE "departments"  ADD FOREIGN KEY ("manager_id") REFERENCES "employees" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "budget" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "budget" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "budget" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "departments" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "departments" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "departments" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "departments" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'departments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'employees'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_employees_role' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'employees' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'employees' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "employees" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "employees"  ADD UNIQUE ("email");ALTER TABLE "employees" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "employees" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "position" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "position" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "position" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" DROP CONSTRAINT "employees_department_id_fkey"
Executing (default): ALTER TABLE "employees"  ADD FOREIGN KEY ("department_id") REFERENCES "departments" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "role" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "role" SET DEFAULT 'employee';DO 'BEGIN CREATE TYPE "public"."enum_employees_role" AS ENUM(''admin'', ''manager'', ''employee''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "employees" ALTER COLUMN "role" TYPE "public"."enum_employees_role" USING ("role"::"public"."enum_employees_role");
Executing (default): ALTER TABLE "employees" ALTER COLUMN "phone" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "hire_date" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "hire_date" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "hire_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "salary" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "salary" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "salary" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "is_active" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "is_active" SET DEFAULT true;ALTER TABLE "employees" ALTER COLUMN "is_active" TYPE BOOLEAN;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "employees" ALTER COLUMN "photo" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "photo" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "photo" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "employees" ALTER COLUMN "job_description" DROP NOT NULL;ALTER TABLE "employees" ALTER COLUMN "job_description" DROP DEFAULT;ALTER TABLE "employees" ALTER COLUMN "job_description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'employees' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_priority' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_assigned_to_fkey"
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_created_by_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("assigned_to") REFERENCES "employees" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "created_by" SET NOT NULL;ALTER TABLE "tasks"  ADD FOREIGN KEY ("created_by") REFERENCES "employees" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_department_id_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("department_id") REFERENCES "departments" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'planned';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''planned'', ''in-progress'', ''completed'', ''cancelled''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "priority" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "priority" SET DEFAULT 'medium';DO 'BEGIN CREATE TYPE "public"."enum_tasks_priority" AS ENUM(''low'', ''medium'', ''high'', ''urgent''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "priority" TYPE "public"."enum_tasks_priority" USING ("priority"::"public"."enum_tasks_priority");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "due_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "due_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "due_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "start_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "start_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "start_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "completed_date" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "completed_date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "completed_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "estimated_hours" TYPE INTEGER;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "actual_hours" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "actual_hours" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "actual_hours" TYPE INTEGER;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "tags" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "tags" SET DEFAULT '[]';ALTER TABLE "tasks" ALTER COLUMN "tags" TYPE JSON;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "attachments" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "attachments" SET DEFAULT '[]';ALTER TABLE "tasks" ALTER COLUMN "attachments" TYPE JSON;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'task_comments'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_task_comments_comment_type' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'task_comments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'task_comments' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "task_comments" DROP CONSTRAINT "task_comments_task_id_fkey"
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "task_id" SET NOT NULL;ALTER TABLE "task_comments"  ADD FOREIGN KEY ("task_id") REFERENCES "tasks" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "task_comments" DROP CONSTRAINT "task_comments_employee_id_fkey"
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "employee_id" SET NOT NULL;ALTER TABLE "task_comments"  ADD FOREIGN KEY ("employee_id") REFERENCES "employees" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "comment" SET NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "comment" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "comment" TYPE TEXT;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "comment_type" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "comment_type" SET DEFAULT 'comment';DO 'BEGIN CREATE TYPE "public"."enum_task_comments_comment_type" AS ENUM(''comment'', ''status_change'', ''assignment_change''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "task_comments" ALTER COLUMN "comment_type" TYPE "public"."enum_task_comments_comment_type" USING ("comment_type"::"public"."enum_task_comments_comment_type");
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "created_at" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "task_comments" ALTER COLUMN "updated_at" DROP NOT NULL;ALTER TABLE "task_comments" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "task_comments" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'task_comments' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'departments'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'departments' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'departments' AND tc.table_catalog = 'tasket_db'
Executing (default): ALTER TABLE "departments" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "departments" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "departments"  ADD UNIQUE ("name");ALTER TABLE "departments" ALTER COLUMN "name" TYPE VARCHAR(255)  ;
^C^C